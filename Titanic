## Titanic

# Load packages
library( 'ggplot2') # visualization
library( 'ggthemes') # visualization
library( 'scales') # visualization
library( 'dplyr') # data manipulation
library( 'mice') # imputation
library( 'randomForest') # classification algorithm
library( cowplot)

setwd( "D:\\R_Working_Directory\\Data\\Titanic")

## read the titanic dataset
titanic_train <- read.csv( "train.csv", header = TRUE, stringsAsFactors = FALSE)
#titanic_test <- read.csv( "test.csv", header = TRUE, stringsAsFactors = FALSE)
#titanic_test_result <- read.csv( "gender_submission.csv", header = TRUE, stringsAsFactors = FALSE)

# Pclass: 舱位等级, 分1/2/3;
# Name: 乘客姓名
# Sex: 性别
# Age: 年龄，有缺失值
# SibSp: 同乘的兄弟姐妹/配偶数
# Parch: 同乘的父母/小孩数
# Ticket: 船票编号
# Fare: 票价
# Cabin: 客舱号, 大量空缺值, 非 NA
# Embarked: 登船港口


## ------ visualization ------
## Overall: There are 891 obs, and 549 people died( 61.6%).
p0 <- ggplot( titanic_train, aes( x = Survived, fill = factor( Survived))) +
  geom_bar( stat = "count") +
  geom_label( stat = "count", aes( label = ..count..)) + 
  labs( x = 'How many people died and survived on the Titanic?') + 
  theme_few()

## Sex vs Survived: 
## 女性存活率高；
p1.1 <- ggplot( titanic_train, aes( Sex, fill = Sex )) + 
  geom_bar( stat = 'count', position = 'dodge') +
  geom_label( stat='count', aes( label = ..count..)) +
  labs( x = "Sex distribution.") +
  theme_few()

p1.2 <- ggplot( titanic_train, aes( Sex, fill = factor( Survived) )) + 
  geom_bar( stat = 'count', position = 'dodge') +
  geom_label( stat='count', aes( label = ..count..)) +
  labs( x = "How many male / female died on the Titanic.") +
  theme_few() +
  theme( legend.position = "none") 
plot_grid( p1.1, p1.2)

## Titanic: Pclass vs Sex
## 乘坐3等船舱的乘客最多.
p2.1 <- ggplot( titanic_train, aes( Pclass, fill = factor( Pclass) )) + 
  geom_bar( stat = 'count') +
  geom_label( stat='count', aes( label = ..count..)) +
  labs( x = "Titanic: Pclass vs Sex") +
  theme_few() +
  theme( legend.position = "none") 
## 仓位高的, 存活率高; 船舱等级的高低与存活率有明显的相关性.
p2.2 <- ggplot( titanic_train, aes( Pclass, fill = factor( Survived) )) + 
  geom_bar( stat = 'count',  position = 'dodge') +
  labs( x = "Train data.") + 
  theme_few() +
  theme( legend.position = "none") 
## 可以看到女性的存活率是相当高的, 且1,2等舱的女性乘客基本上都存活下来了. 二男性则不然,尤其是 2,3等舱的男乘客, 死亡率相近.
p2.3 <- ggplot( titanic_train, aes( Pclass, fill = factor( Survived) )) + 
  geom_bar( stat = 'count',  position = 'fill') +
  labs( x = "Train data.") + 
  facet_grid( .~ Sex) +
  theme_few() +
  theme( legend.position = "none") 
plot_grid( p2.1, p2.2, p2.3, ncol = 3) ## 同时出图, ncol参数为一行输出多少张图.

## ------ Feature engineering ------
## 姓名虽然看似没有信息可以挖掘, 但是其中包含着 Mr. Mrs. 等头衔(title), 可以反映出这个人的身份,地位等
titanic_train$title <- sapply( titanic_train$Name, 
                               function(x){ strsplit( x, split = "[,.]")[[1]][2]})
titanic_train$title <- sub( ' ', '', titanic_train$title )
## 查看表格.
table( titanic_train$Sex, titanic_train$title)
## 对 title进行分类, 根据现实情况划分即可.
## 注意, 像 'Capt', 'Don', 'the Counttree' 这类数量极少的, 不应该统计在内.

titanic_train$title1 <- titanic_train$title ## 先copy元title, 因为有部分 title不需要做变换
titanic_train$title1[ titanic_train$title %in% c( "Mlle", "Mr")] <- "Miss" ##'Mr' 常用来称呼年轻的已婚女性, 可以与Miss分为一组.
titanic_train$title1[ titanic_train$title == "Mme"] <- "Mrs" 
titanic_train$title1[ !(titanic_train$title %in% c('Master', 'Miss', 'Mr', 'Mrs'))] <- "Rare Title" 
##  Mr(先生)这种占比极大的 title, 又是男性, 在不同的船舱等级中死亡率差异较大, 因此将其再划分为两部分:
titanic_train$title1[ titanic_train$title == "Mr" & titanic_train$Pclass == '1'] <- "MrP1" 
titanic_train$title1[ titanic_train$title == "Mr" & titanic_train$Pclass %in% c( '2', '3')] <- "MrP23" 

table( titanic_train$Sex, titanic_train$title1)

p3 <- ggplot( titanic_train, aes( x = title1, fill = factor( Survived))) +
  geom_bar( stat = 'count', position = 'stack') +
  labs( x = "Title")
  

## Famliy Size: 从"SibSp", "Parch"可以看出与乘客同船的 兄弟姐妹数 和 子女父母数. 
## 因此 family Size = 兄弟姐妹数 + 子女父母数 + 本人
titanic_train$Fsize <- titanic_train$SibSp + titanic_train$Parch + 1
p4.1 <- ggplot( titanic_train, aes( x = Fsize, fill = factor( Survived))) +
  geom_bar( stat = 'count', position = 'dodge') +
  scale_x_continuous( breaks = c( 1:11)) +
  labs( x = "Famliy Size") +
  theme( legend.position = "none") 
p4.2 <- ggplot( titanic_train, aes( x = Fsize, fill = factor( Survived))) +
  geom_bar( stat = 'count', position = 'fill') +
  scale_x_continuous( breaks = c( 1:11)) +
  labs( x = "Famliy Size")
## 可以看到, 1人乘船的数量最大,且死亡率非常高. 2-4人同乘, 有很大几率存活.
plot_grid( p4.1, p4.2, ncol = 2)

